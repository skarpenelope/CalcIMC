{"version":3,"sources":["fitimg.svg","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","App","peso","setPeso","useState","altura","setAltura","resultado","setResultado","React","createElement","className","id","alt","src","fitimg","onSubmit","e","preventDefault","alturaEmMetros","parseFloat","imc","toFixed","htmlFor","class","type","value","onChange","target","required","reportWebVitals","onPerfEntry","Function","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+GCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gKC2FzBC,MAnFf,WACE,MAAOC,EAAMC,GAAWC,mBAAS,KAC1BC,EAAQC,GAAaF,mBAAS,KAC9BG,EAAWC,GAAgBJ,mBAAS,MAc3C,OAGEK,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,eAEAD,IAAAC,cAAA,QAAME,GAAG,aACPH,IAAAC,cAAA,WAASE,GAAG,MAAMC,IAAI,WACpBJ,IAAAC,cAAA,OAAKI,IAAKC,OAGZN,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,WAASE,GAAG,cACVH,IAAAC,cAAA,QAAME,GAAG,QAAQI,SAzBNC,IAEnB,GADAA,EAAEC,iBACChB,GAAQG,EAAQ,CACjB,MAAMc,EAAiBC,WAAWf,GAG5BgB,GAFWD,WAAWlB,IAELiB,EAAeA,IAAiBG,QAAQ,GAE/Dd,EAAaa,MAkBLZ,IAAAC,cAAA,UAAI,qBACJD,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,SAAOa,QAAQ,SAAQ,cAIvBd,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,QAAMc,MAAM,6BAA4B,UAGxCf,IAAAC,cAAA,SAAOe,KAAK,SAASb,GAAG,SAASc,MAAOxB,EAAMyB,SAAWV,GAAMd,EAAQc,EAAEW,OAAOF,OAAQG,UAAQ,IAChGpB,IAAAC,cAAA,YAAM,OAGRD,IAAAC,cAAA,SAAOa,QAAQ,WAAU,oBAEzBd,IAAAC,cAAA,OAAKC,UAAU,eACfF,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,QAAMc,MAAM,6BAA4B,cAGxCf,IAAAC,cAAA,SAAOe,KAAK,SAASb,GAAG,SAASc,MAAOrB,EAAQsB,SAAWV,GAAMX,EAAUW,EAAEW,OAAOF,OAAQG,UAAQ,IACpGpB,IAAAC,cAAA,YAAM,QAOVD,IAAAC,cAAA,UAAQE,GAAG,YAAQ,eAMrBH,IAAAC,cAAA,OAAKE,GAAG,kBACNH,IAAAC,cAAA,UAAI,aAAWH,EAAU,WC/DxBuB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCjC,EAAAkB,EAAA,GAAAgB,KAAAlC,EAAAmC,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHpC,IAAAC,cAACD,IAAMqC,WAAU,KACfrC,IAAAC,cAACT,EAAG,QAOR6B","file":"static/js/main.3ec589b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fitimg.6d12dd5a.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport fitimg from \"./fitimg.svg\"\nimport React, {useState} from 'react';\n\n//#6563FF\n\n\nfunction App() {\n  const [peso, setPeso] = useState('');\n  const [altura, setAltura] = useState('');\n  const [resultado, setResultado] = useState(null);\n\n  const calcularImc = (e) => {\n    e.preventDefault();\n    if(peso && altura) {\n      const alturaEmMetros = parseFloat(altura);\n      const pesoemkg = parseFloat(peso);\n\n      const imc = (pesoemkg/(alturaEmMetros*alturaEmMetros)).toFixed(2);\n\n      setResultado(imc)\n\n    }\n  };\n  return (\n    \n    \n    <div className=\"App\">\n      <header></header>\n\n      <main id=\"container\">\n        <section id=\"img\" alt=\"fitness\">\n          <img src={fitimg}/>\n\n        </section>\n        <div className=\"calculadora\">\n          <section id=\"calculator\">\n            <form id=\"forms\" onSubmit={calcularImc}>\n              <h1>Calculadora - IMC</h1>\n              <div className=\"input-box\">\n                <label htmlFor=\"pesox\">\n                  Peso em kg\n                </label>\n\n                <div className=\"icon-weight\">\n                  <span class=\"material-symbols-outlined\">\n                    weight\n                  </span>\n                  <input type=\"number\" id=\"weight\" value={peso} onChange={(e) => setPeso(e.target.value)} required/>\n                  <span>kg</span>\n                </div>\n\n                <label htmlFor=\"alturay\">Altura em metros</label>\n\n                <div className=\"icon-height\">\n                <div className=\"icon-weight\">\n                  <span class=\"material-symbols-outlined\">\n                    straighten\n                  </span>\n                  <input type=\"number\" id=\"height\" value={altura} onChange={(e) => setAltura(e.target.value)} required/>\n                  <span>M</span>\n                  </div>\n                </div>\n\n\n              </div>\n\n              <button id=\"botÃ£o\"> calcular </button>\n\n              \n            </form>\n\n            \n            <div id='resultadoTexto'>\n              <h2> Seu IMC: {resultado} </h2>\n\n            </div>\n            \n            \n          </section>\n        </div>\n      </main>\n    </div>\n\n    \n  \n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}